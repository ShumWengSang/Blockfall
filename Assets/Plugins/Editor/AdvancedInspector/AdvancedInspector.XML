<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AdvancedInspector</name>
    </assembly>
    <members>
        <member name="T:AdvancedInspector.AdvancedInspectorControl">
            <summary>
            A collection of static method made to handle the drawing of the Advanced Inspector.
            In most cases, you won't have to deal with this class.
            </summary>
        </member>
        <member name="P:AdvancedInspector.AdvancedInspectorControl.BoxStyle">
            <summary>
            Group box style
            </summary>
        </member>
        <member name="P:AdvancedInspector.AdvancedInspectorControl.Suspended">
            <summary>
            When complex operation are performed, the Inspector blocks repaint.
            </summary>
        </member>
        <member name="P:AdvancedInspector.AdvancedInspectorControl.Level">
            <summary>
            Current complexity level.
            </summary>
        </member>
        <member name="P:AdvancedInspector.AdvancedInspectorControl.Sorting">
            <summary>
            How the fields are sorted.
            </summary>
        </member>
        <member name="P:AdvancedInspector.AdvancedInspectorControl.ShowIconPreview">
            <summary>
            Should an object field display a preview icon?
            </summary>
        </member>
        <member name="P:AdvancedInspector.AdvancedInspectorControl.IconPreviewSize">
            <summary>
            At which size the preview icon should be displayed.
            </summary>
        </member>
        <member name="E:AdvancedInspector.AdvancedInspectorControl.SortingChanged">
            <summary>
            Raised if the inspector needs a redraw.
            </summary>
        </member>
        <member name="P:AdvancedInspector.AdvancedInspectorControl.Editor">
            <summary>
            Used for internal callback from a modal windows.
            </summary>
        </member>
        <member name="P:AdvancedInspector.AdvancedInspectorControl.Field">
            <summary>
            Used for internal callback from a modal windows.
            </summary>
        </member>
        <member name="T:AdvancedInspector.AdvancedInspectorControl.InspectorSorting">
            <summary>
            Field sorting enum.
            </summary>
        </member>
        <member name="F:AdvancedInspector.AdvancedInspectorControl.InspectorSorting.None">
            <summary>
            No sorting, using the order found in code.
            </summary>
        </member>
        <member name="F:AdvancedInspector.AdvancedInspectorControl.InspectorSorting.Alpha">
            <summary>
            Alphabethic sorting A, B, C...
            </summary>
        </member>
        <member name="F:AdvancedInspector.AdvancedInspectorControl.InspectorSorting.AntiAlpha">
            <summary>
            Anti-alphabethic sorting, C, B, A...
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.ModalRequest(System.Boolean)">
            <summary>
            IModal Implementation.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.ModalClosed(AdvancedInspector.ModalWindow)">
            <summary>
            IModal Implementation.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.Inspect(AdvancedInspector.InspectorEditor,System.Collections.Generic.List{AdvancedInspector.InspectorField},System.Boolean,System.Boolean)">
            <summary>
            Called by an Editor to have a collection of InspectorField to be displayed.
            Uniformized entry point of inspector drawing.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.Inspect(AdvancedInspector.InspectorEditor,System.Collections.Generic.List{AdvancedInspector.InspectorField},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Called by an Editor to have a collection of InspectorField to be displayed.
            Uniformized entry point of inspector drawing.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.Inspect(AdvancedInspector.InspectorEditor,System.Collections.Generic.List{AdvancedInspector.InspectorField},System.Boolean,System.Boolean,System.Boolean,AdvancedInspector.Separator)">
            <summary>
            Called by an Editor to have a collection of InspectorField to be displayed.
            Uniformized entry point of inspector drawing.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.Draw(AdvancedInspector.InspectorEditor,AdvancedInspector.InspectorField,System.Collections.Generic.List{AdvancedInspector.InspectorField},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Entry point of the inspection of a Property based editor.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawExpander(AdvancedInspector.InspectorField,AdvancedInspector.FieldEditor,System.Boolean)">
            <summary>
            Draw the arrow icon that allow to browse sub-object property.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawIndexedControl(AdvancedInspector.InspectorField)">
            <summary>
            Draw the control of an sortable list. 
            Return true if a list has been modified and requires a redraw.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawKeyedControl(AdvancedInspector.InspectorField)">
            <summary>
            Draw the - button for a Dictionary
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawRestricted(AdvancedInspector.InspectorEditor,AdvancedInspector.InspectorField,System.Collections.Generic.IList{AdvancedInspector.DescriptionPair},UnityEngine.GUIStyle)">
            <summary>
            Draw the "Restricted" enum, which is a runtime list provide by a method.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawDerived(AdvancedInspector.InspectorEditor,AdvancedInspector.InspectorField,UnityEngine.GUIStyle)">
            <summary>
            Draw the +/- icon to control the creation and deletion of user created object.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawList(AdvancedInspector.InspectorEditor,AdvancedInspector.InspectorField)">
            <summary>
            Draw the + icon of a List
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawDictionary(AdvancedInspector.InspectorEditor,AdvancedInspector.InspectorField)">
            <summary>
            Draw the + icon of a Dictionary
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawLabel(AdvancedInspector.FieldEditor,AdvancedInspector.InspectorField,System.Boolean)">
            <summary>
            Draw the left side of a field, the label.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.GetWidth(AdvancedInspector.InspectorField)">
            <summary>
            Width of the label part.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawHelp(AdvancedInspector.InspectorField,System.Boolean)">
            <summary>
            Draw the help box bellow the field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.DrawClassHelp(System.Object[],System.Boolean)">
            <summary>
            Help box at the top or bottom of the whole inspector.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.ParseRuntimeAttributes(AdvancedInspector.IRuntimeAttribute,System.Type,System.Object[])">
            <summary>
            This method is invoked to build a list of proper delegate to invoke.
            </summary>
        </member>
        <member name="M:AdvancedInspector.AdvancedInspectorControl.GetDerived(System.Type)">
            <summary>
            Get the list of valid derivaton from a specific type.
            Used to create derived object, should always be from ComponentMonoBehaviour but is not enforced.
            </summary>
        </member>
        <member name="T:AdvancedInspector.FieldEditor">
            <summary>
            When a specific type is encounter by the Inspector, we check if someone defined an field editor for it.
            When it occurs, all the field drawing is left to the custom editor.
            </summary>
        </member>
        <member name="F:AdvancedInspector.FieldEditor.MIN_FIELD_HEIGHT">
            <summary>
            Minimum field height
            </summary>
        </member>
        <member name="F:AdvancedInspector.FieldEditor.BUTTON_HEIGHT">
            <summary>
            Button Height
            </summary>
        </member>
        <member name="F:AdvancedInspector.FieldEditor.VECTOR_FIELD_WIDTH">
            <summary>
            Standard float-in-vector label width
            </summary>
        </member>
        <member name="P:AdvancedInspector.FieldEditor.EditDerived">
            <summary>
            If true and no fieldeditor is found for a specific type, this fieldeditor is used for the derived type.
            </summary>
        </member>
        <member name="P:AdvancedInspector.FieldEditor.EditedTypes">
            <summary>
            List of type this FieldEditor edit.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.Draw(AdvancedInspector.InspectorField,UnityEngine.GUIStyle)">
            <summary>
            The draw call from the Inspector when inspecting a specific type.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.Draw(AdvancedInspector.FieldAttribute,AdvancedInspector.InspectorField)">
            <summary>
            The draw call from the Inspector when drawing a FieldAttribute.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.OnLabelDraw(AdvancedInspector.InspectorField,UnityEngine.Rect)">
            <summary>
            Called after the label is drawn.
            Useful to add dragging modifier.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.OnLabelClick(AdvancedInspector.InspectorField)">
            <summary>
            Event raised when someone click a label.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.OnLabelDoubleClick(AdvancedInspector.InspectorField)">
            <summary>
            Event raised when someone double click a label.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.OnLabelDragged(AdvancedInspector.InspectorField)">
            <summary>
            Fired when someone click and drag the label with modified key (control/shift/alt) pressed.
            A normal drag performs a copy/paste.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.OnContextualClick(AdvancedInspector.InspectorField,UnityEditor.GenericMenu)">
            <summary>
            Event raised when someone right-click a label.
            The GenenicMenu is empty and can add new items in it.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.IsExpandable(AdvancedInspector.InspectorField)">
            <summary>
            Override if you want to prevent a type from being expandable at any time.
            Override the Expandable attributes.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.GetValue(AdvancedInspector.InspectorField)">
            <summary>
            Get the value of a field.
            Flag "Show Mixed Value" automaticly and return null if a multi-selection has different values.
            </summary>
        </member>
        <member name="M:AdvancedInspector.FieldEditor.GetFields(AdvancedInspector.InspectorField,System.Object[],System.Boolean,System.Boolean)">
            <summary>
            Returning null makes Advanced Inspector inspect the object default items.
            If you want no fields, return an empty list.
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorEditor">
            <summary>
            Base class of BehaviourEditor, ScriptableEditor and ExternalEditor.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorEditor.Current">
            <summary>
            The currently refreshing InspectorEditor
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.HasPreviewGUI">
            <summary>
            Preview is handled internally and is turned on and off using IPreview interface.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorEditor.Picking">
            <summary>
            Is the Inspector currently in picking mode?
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorEditor.Advanced">
            <summary>
            Return true if this editor is using advanced features.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorEditor.Instances">
            <summary>
            We use our own targets list because we can draw object not deriving from UnityEngine.Object.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorEditor.Parent">
            <summary>
            In case of value type, we need to know the parent.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorEditor.fields">
            <summary>
            List of fields held by this inspector.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorEditor.Fields">
            <summary>
            List of fields held by this inspector.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorEditor.Changed">
            <summary>
            Has any changed occured in the last redraw.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorEditor.Expandable">
            <summary>
            Override this if you implement your own inspector and doesn't want it to be expandable.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorEditor.rebuild">
            <summary>
            When a value changed internally, this forces the fields to be refreshed.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorEditor.tab">
            <summary>
            The type of the tab enum, if any.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorEditor.selectedTab">
            <summary>
            The last selected tab between refresh.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.OnEnable">
            <summary>
            Unity's OnEnable.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.OnDisable">
            <summary>
            Unity's OnDisable
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.StartPicking(System.Action{UnityEngine.GameObject,System.Object},System.Object)">
            <summary>
            Start the Scene View picking tool.
            Type can define the component we seek on a GameObject.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.StopPicking">
            <summary>
            Stop the picking tool before it has resolved.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
            <summary>
            Preview Draw
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.OnSceneGUI">
            <summary>
            Override this method if you want to draw on the scene view.
            Don't forget to call the base.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.OnPreviewSettings">
            <summary>
            Preview Settings
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.DataChanged">
            <summary>
            Call a refresh of this editor, assuming the layout needs to be rebuilt.
            Expensive operation.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.DataChanged(System.Boolean)">
            <summary>
            Data Changed, repaint.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.UseDefaultMargins">
            <summary>
            Unity's Default Margins. False if running in Advanced Inspector.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorEditor.TestForDefaultInspector">
            <summary>
            If true, will test if the type of in the inspector object has "AdvancedInspector" attributes.
            Default; false;
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.OnInspectorGUI">
            <summary>
            Default Inspector entry point.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.DrawAdvancedInspector">
            <summary>
            Similar to "DrawDefaultInspector", except this is the Advanced one.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorEditor.RefreshFields">
            <summary>
            Force this field to rebuild the list of its children.
            If you implement an editor specific to a type, you should only need to override this method.
            Consider clearing existing fields before adding new one.
            </summary>
        </member>
        <member name="T:AdvancedInspector.BehaviourEditor">
            <summary>
            Behaviour Editor is the entry point for all MonoBehaviour in Advanced Inspector.
            </summary>
        </member>
        <member name="P:AdvancedInspector.BehaviourEditor.TestForDefaultInspector">
            <summary>
            Should we check for the [AdvancedInspectorAttribute]?
            </summary>
        </member>
        <member name="M:AdvancedInspector.BehaviourEditor.OnEnable">
            <summary>
            Unity's OnEnable.
            </summary>
        </member>
        <member name="M:AdvancedInspector.BehaviourEditor.OnInspectorGUI">
            <summary>
            Override to display Audio VU
            </summary>
        </member>
        <member name="T:AdvancedInspector.ExternalEditor">
            <summary>
            Similar to a standard PropertyInspector, but can be called from outside the scope of a Inspector.
            Useful to build your own EditorWindow with an integrated inspector.
            Call the method Draw with a Rect of the region to draw on.
            </summary>
        </member>
        <member name="P:AdvancedInspector.ExternalEditor.Expandable">
            <summary>
            If false, the Inspector won't draw the expander and won't reserve space on the left of the labels.
            </summary>
        </member>
        <member name="P:AdvancedInspector.ExternalEditor.DraggableSeparator">
            <summary>
            Can the separator be dragged around?
            </summary>
        </member>
        <member name="P:AdvancedInspector.ExternalEditor.DivisionSeparator">
            <summary>
            Where is the separator?
            In PerPixel, the value is in pixel from the top or the left.
            Otherwise, it's in %.
            </summary>
        </member>
        <member name="E:AdvancedInspector.ExternalEditor.RequestRepaint">
            <summary>
            IControl implementation
            </summary>
        </member>
        <member name="M:AdvancedInspector.ExternalEditor.Draw(UnityEngine.Rect)">
            <summary>
            IControl implementation
            </summary>
        </member>
        <member name="T:AdvancedInspector.ScriptableEditor">
            <summary>
            Scriptable Editor is the entry point for all ScriptableObject in Advanced Inspector.
            </summary>
        </member>
        <member name="P:AdvancedInspector.ScriptableEditor.TestForDefaultInspector">
            <summary>
            Should we check for the [AdvancedInspectorAttribute]?
            </summary>
        </member>
        <member name="M:AdvancedInspector.ScriptableEditor.OnEnable">
            <summary>
            Unity's OnEnable.
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorField">
            <summary>
            Pooled information about a PropertyInfo and translated for the Inspector.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Instances">
            <summary>
            The object owning this specific field.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.SerializedInstances">
            <summary>
            The serialized object owning this specific field.
            May not be the same as the instance, or even the currently Selected item in the Inspector.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Prefab">
            <summary>
            The prefab parent to this object.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Info">
            <summary>
            The member info of this field.
            PropertyInfo, FieldInfo or MethodInfo. Otherwise null.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Attributes">
            <summary>
            The attributes of this field, manually and by reflection.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.SerializedProperty">
            <summary>
            Used only for the Script object reference at the top, or hidden Unity property.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.GameObjects">
            <summary>
            Get the parents GameObjects in cases of components. Useful for undoes.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Parent">
            <summary>
            The parent field in case of nesting.
            Null if directly at the top.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Fields">
            <summary>
            Subfields, such as field in an expandable object, or a list.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.InternalFields">
            <summary>
            Fields used for edition, are not drawn by the Inspector automaticly.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Depth">
            <summary>
            Indentation depth of this field.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.InspectorType">
            <summary>
            Is this field a method, field, property or a group?
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Undoable">
            <summary>
            External editor are sometimes used to browse non-Unity object.
            Sadly, undo only works on valid Unity objects.
            Also return false if one of the serializable parent became null or none.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Type">
            <summary>
            The type of this field.
            In most case, would return the FieldInfo.FieldType or PropertyInfo.PropertyType
            In case of a group, it returns null.
            If this field is flagged as Runtime-Resolved, it returns the type of the current value.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.BaseType">
            <summary>
            In case of a collection, returns the base type.
            Ex.: int[] or List(int), base type if int.
            In a dictionary, return the value type.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.KeyType">
            <summary>
            In case of a dictionary, returns the key type.
            Return null otherwise.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.PropertyDrawers">
            <summary>
            Associated property drawers, if any.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Editor">
            <summary>
            The default FieldEditor associated with this InspectorField type.
            Null is no FieldEditor found.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Restricted">
            <summary>
            A restrictor turns any field into a drop down list of specific choices.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Group">
            <summary>
            Is this field part of a group?
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Toolbar">
            <summary>
            Is this field part of a toolbar?
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Tab">
            <summary>
            Is this field visibility controlled by a tab?
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.SelectedTab">
            <summary>
            In cases of tabs, this is the currently selected tab enum value.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Description">
            <summary>
            The Descriptor assigned to this field. Name, tooltip, icon, etc.
            In case of multi-objects, there is no runtime invokation and the descriptor returned is the one on the member.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Static">
            <summary>
            Returns true if the item inspected is static.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.ReadOnly">
            <summary>
            Readonly field cannot be edited.
            In case of multi-objects, if any is readonly, all are.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Animated">
            <summary>
            Is this field animated. Only works for fields, not property.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Bypass">
            <summary>
            This field is a bypass field, and sub-field automaticly recieve that flag.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Expandable">
            <summary>
            Can this field be expanded?
            It display the arrow button.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Expanded">
            <summary>
            Is this field open and displaying internal fields?
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.AlwaysExpanded">
            <summary>
            This field cannot be collapsed.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Erased">
            <summary>
            Was this field erased?
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.CreateDerived">
            <summary>
            Can this object field display the "+" sign to create a derived object from the base type?
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Name">
            <summary>
            Name of the label of that field.
            Can be modified by Descriptor.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Changed">
            <summary>
            Has this field changed in the last redraw?
            Reading this value reset it to false.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.FieldColor">
            <summary>
            The color of the editable field.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.BackgroundColor">
            <summary>
            The color of the background (ex.: Expandable box)
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Priority">
            <summary>
            Priority of a field, used when sorting.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Order">
            <summary>
            The order at which this field was found in the code.
            If an indexed field, return the index.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Label">
            <summary>
            If false, this field does not draw its label.
            Useful for toolbar.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Style">
            <summary>
            The specific style this field is draw with.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Path">
            <summary>
            Internal path to this specific field.
            Used to keep persistant data across selection.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Visible">
            <summary>
            Many thing can prevent a field from being drawn. Ex.: InspectAttribute can hide it.
            If internal data from Unity return an exception on read, we skip it.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Editable">
            <summary>
            Return false is any of the serialized parent have the hide flag "Not Editable".
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Modified">
            <summary>
            Return true if the item is different from it's prefab parent.
            Always return false if it's a non-value type and not a ref (UnityEngine.Object).
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Mixed">
            <summary>
            Return true when editing multiple object that doesn't have the same value.
            Always return true if they are objects and not the same instance.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Similar">
            <summary>
            Return true if all instances are of the same type.
            Which mean they are expandable even in multi-objects edition
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Index">
            <summary>
            Index of the field in a list or array.
            Return -1 if not part of a collection.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.IsList">
            <summary>
            Is this a collection? (array or list)
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Key">
            <summary>
            When in a dictionary, the key of this value.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.IsDictionary">
            <summary>
            Is this a dictionary? (UDictionary)
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.Count">
            <summary>
            Returns the current number of children.
            In case of list, returns the number of items in it.
            In case of multiples list, return -1 if all list doesn't have the same number of items.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorField.OverloadToString">
            <summary>
            Test if the current type overload ToString properly.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField)">
            <summary>
            This constructor is used as a duplication.
            Note that this field is free and not parented to anything.
            Use with great care!
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(System.Type,System.Object[],System.Reflection.MemberInfo,System.Attribute[])">
            <summary>
            Entry point for a generic manually created field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,System.Type,System.Object[],System.Reflection.MemberInfo,System.Attribute[])">
            <summary>
            Entry point for a generic manually created field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,System.Int32,UnityEditor.SerializedProperty,System.Attribute[])">
            <summary>
            Entry point for a generic indexed serialized created field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(System.Type,System.Object[],UnityEditor.SerializedProperty,System.Attribute[])">
            <summary>
            Entry point for a generic serialized created field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(System.String)">
            <summary>
            Entry point for an empty field with no editor.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.GroupAttribute)">
            <summary>
            Entry point of a group.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.ToolbarAttribute)">
            <summary>
            Entry point of a toolbar.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,System.Object[],System.Int32,System.Attribute[])">
            <summary>
            Entry point for a indexed field.
            You should not create this manually.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,System.Object[],System.Object,System.Attribute[])">
            <summary>
            Entry point of a Dictionary item.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(System.Type)">
            <summary>
            Entry point for a non-member related field.
            Useful to draw a single FieldEditor.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,UnityEngine.Object[],System.Object[],UnityEditor.SerializedProperty)">
            <summary>
            Script entry point.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(UnityEngine.Object[],System.String)">
            <summary>
            Entry point for a Field created from a path and Object ids.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,UnityEngine.Object[],System.Object[],System.Reflection.MethodInfo)">
            <summary>
            Entry point for a method field. (Button)
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,UnityEngine.Object[],System.Object[],System.Reflection.MethodInfo,System.Attribute[])">
            <summary>
            Entry point for a method field. (Button)
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,UnityEngine.Object[],System.Object[],UnityEngine.Object,System.Reflection.FieldInfo)">
            <summary>
            Entry point for a standard field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,UnityEngine.Object[],System.Object[],UnityEngine.Object,System.Reflection.FieldInfo,System.Boolean)">
            <summary>
            Entry point for a standard field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,UnityEngine.Object[],System.Object[],UnityEngine.Object,System.Reflection.FieldInfo,System.Boolean,System.Attribute[])">
            <summary>
            Entry point for a standard field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,UnityEngine.Object[],System.Object[],UnityEngine.Object,System.Reflection.PropertyInfo)">
            <summary>
            Entry point for a standard property.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,UnityEngine.Object[],System.Object[],UnityEngine.Object,System.Reflection.PropertyInfo,System.Boolean)">
            <summary>
            Entry point for a standard property.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.#ctor(AdvancedInspector.InspectorField,UnityEngine.Object[],System.Object[],UnityEngine.Object,System.Reflection.PropertyInfo,System.Boolean,System.Attribute[])">
            <summary>
            Entry point for a standard property.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.op_Equality(AdvancedInspector.InspectorField,AdvancedInspector.InspectorField)">
            <summary>
            Compares if two InspectorField contains the same data.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.op_Inequality(AdvancedInspector.InspectorField,AdvancedInspector.InspectorField)">
            <summary>
            Compares if two InspectorField contains the same data.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.Equals(System.Object)">
            <summary>
            Compares if two InspectorField contains the same data.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetHashCode">
            <summary>
            HashCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdvancedInspector.InspectorField.CompareTo(System.Object)">
            <summary>
            IComparable implementation
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.CompareTo(AdvancedInspector.InspectorField)">
            <summary>
            IComparable implementation
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.AddAttribute(System.Attribute)">
            <summary>
            Force a new attribute to be added a runtime.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetAttribute``1">
            <summary>
            Get an attribute by type that was applied to the original item.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetAttributes``1">
            <summary>
            Get all the attributes by type that were applied to the original item.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.HasAttribute``1">
            <summary>
            Return true if the memberinfo of this field is sporting that specific attribute type.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.Watch">
            <summary>
            Add this field to the watch list, which is displayed on the Watch window.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.Select">
            <summary>
            Force the selection of the serialized instances of this field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.Save">
            <summary>
            Attempt to save this field value in play mode the next time it is stopped.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.Apply">
            <summary>
            Apply this field modification to its prefab parent.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.Revert">
            <summary>
            Revert any modification of this field and retreived the original value of its prefab parent.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.RecordObjects(System.String)">
            <summary>
            Record the object state for undo purpose.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.Copy">
            <summary>
            Copy the current value of this field to the clipboard.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.CanPaste(System.Object)">
            <summary>
            Return true if the passed value can be copied over this field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.Paste">
            <summary>
            Paste the clipboard data to this field.
            Careful, you should do a type test before.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetValue">
            <summary>
            The current value of this field.
            If not a field, returns null.
            If multi object, return null if all the value aren't the same.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetValue``1">
            <summary>
            The current value of this field.
            If not a field, returns null.
            If multi object, return null if all the value aren't the same.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetValue(System.Object)">
            <summary>
            The value of this field, based on a specific object instance.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetValue``1(System.Object)">
            <summary>
            The value of this field, based on a specific object instance.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetValues">
            <summary>
            Get all instances value.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetValues``1">
            <summary>
            Get all instances value.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.ResetToDefault">
            <summary>
            Reset this field to its default value.
            Object = null
            Value Type = default(T)
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.InitCollection">
            <summary>
            Unity doesn't always properly init it's array/list if a serialization reload didn't occur.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.SetValue(System.Object)">
            <summary>
            Set the value of this field.
            Support undo. When calling this, assume undo will be "Set Value MyField"
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.SetValue(System.Object,System.Object)">
            <summary>
            Set the value of this field, based on a specific object instance.
            Does not support undo, should be recorded before calling.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.SetDirty">
            <summary>
            Flags the related serialized instance as dirty.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.RefreshFields">
            <summary>
            Reparse the internal sub-fields of this field.
            Useful when a list or an object changed.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.SortFields">
            <summary>
            Sort all children fields.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetInfoByPath(UnityEngine.Object,System.String)">
            <summary>
            Get a MemberInfo from a serializable path.
            The "Path" property from a InspectorField is a valid path.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetValueByPath(UnityEngine.Object,System.String)">
            <summary>
            Get a value from a serializable path.
            The "Path" property from a InspectorField is a valid path.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.SetValueByPath(UnityEngine.Object,System.String,System.Object)">
            <summary>
            Set a value by a serializable path.
            The "Path" property from a InspectorField is a valid path.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetIndexedProperties(AdvancedInspector.InspectorField,System.Collections.Generic.List{System.Collections.IList})">
            <summary>
            Return a list of indexed field. Work with List and Array.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetKeyedProperties(AdvancedInspector.InspectorField,System.Collections.Generic.List{System.Collections.IDictionary})">
            <summary>
            Return a list of keyed field. Work with IDictionary.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetEntries(AdvancedInspector.InspectorField,System.Object[])">
            <summary>
            Get fields from an object. 
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetEntries(AdvancedInspector.InspectorField,System.Object[],System.Boolean)">
            <summary>
            Get fields from an object. 
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorField.GetEntries(AdvancedInspector.InspectorField,System.Object[],System.Boolean,System.Boolean)">
            <summary>
            Get fields from an object. Bypass ignore Inspect and Expandable attributes.
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorType">
            <summary>
            Type of InspectorField.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorType.None">
            <summary>
            Empty unset field
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorType.Field">
            <summary>
            Field containing a FieldInfo
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorType.Property">
            <summary>
            Field containing a PropertyInfo
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorType.Method">
            <summary>
            Field containing a MethodInfo
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorType.Serialized">
            <summary>
            The InspectorField is only a wrapper around a SerializedProperty object.
            To use in case of hidden property in the Unity API.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorType.Group">
            <summary>
            Field that is a group of other field.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorType.Toolbar">
            <summary>
            Field that is drawn as a toolbar. (horizontal group)
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorType.Unlinked">
            <summary>
            Unlinked field just stores a value internally and is not bound to an object.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorType.Script">
            <summary>
            The top field, the reference towards the original script.
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorPreferences">
            <summary>
            Handles the Advanced Inspector preferences.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.Style">
            <summary>
            The style collection used for the different element.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.Separator">
            <summary>
            The separator's style.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.SeparatorDefaultColor">
            <summary>
            Unselected color of the separator.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.SeparatorSelectedColor">
            <summary>
            Selected color of the separator.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.BoxDefaultColor">
            <summary>
            Selected color of the separator.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.BoxPlayColor">
            <summary>
            Selected color of the separator.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.InspectDefaultItems">
            <summary>
            If true, all classes that do not have a Custom Editor are drawn by Advanced Inspector.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.ExpandableReferences">
            <summary>
            If true, all classes that do not have a Custom Editor are drawn by Advanced Inspector.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.ValueScroll">
            <summary>
            The control for scrolling numbers.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.CopyPaste">
            <summary>
            The control to copy-paste by drag.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.MassExpand">
            <summary>
            The control modifier used when clicking on an expansion arrow. Expand/Collapse sub-nodes.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.Contextual">
            <summary>
            Usually to open the contextual menu, you do Right-Click.
            In some cases, people may not have access to a proper right-click, so they can do CTRL+Click for example.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.CollectionItemNaming">
            <summary>
            How collection names are displayed.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.ExtraIndentation">
            <summary>
            Extra indentation applied to boxes.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreferences.LargeCollection">
            <summary>
            The maximum number of displayed item in a collection. Trigger the large collection arrow display beyond that.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorPreferences.IsDragControl(AdvancedInspector.InspectorPreferences.InspectorDragControl)">
            <summary>
            Returns true if the control is valid in the current Event context.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorPreferences.IsControl(AdvancedInspector.InspectorPreferences.InspectorModifierControl)">
            <summary>
            Returns true if the control is valid in the current Event context.
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorPreferences.InspectorDragControl">
            <summary>
            The accepted control that involves dragging.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorDragControl.None">
            <summary>
            The control is turned off.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorDragControl.Drag">
            <summary>
            Single drag.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorDragControl.AltDrag">
            <summary>
            Alt+Drag
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorDragControl.ControlDrag">
            <summary>
            Control+Drag
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorDragControl.ShiftDrag">
            <summary>
            Shift+Drag
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorPreferences.InspectorModifierControl">
            <summary>
            The modifier keys involded in non-dragging action.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorModifierControl.Alt">
            <summary>
            Alt Key
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorModifierControl.Control">
            <summary>
            Control Key
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorModifierControl.Shift">
            <summary>
            Shift Key
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorPreferences.InspectorCollectionItemNaming">
            <summary>
            Controls how a collection displayed its indexed items.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorCollectionItemNaming.Index">
            <summary>
            Advanced Inspector default: "[4]"
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorCollectionItemNaming.Numbered">
            <summary>
            "4"
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorCollectionItemNaming.IndexedElements">
            <summary>
            "Element[4]"
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorCollectionItemNaming.NumberedElements">
            <summary>
            Unity's default: "Element 4"
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorCollectionItemNaming.IndexedNames">
            <summary>
            "ParentName[4]"
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorPreferences.InspectorCollectionItemNaming.NumberedNames">
            <summary>
            ParentName 4
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorPreview">
            <summary>
            This class handles the rendering and input of the Preview zone.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorPreview.Targets">
            <summary>
            Object to be previewed
            Supported type;
            GameObject
            Mesh
            Material
            Texture
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorStyle">
            <summary>
            The different internal style.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorStyle.Empty">
            <summary>
            No boxes, no nothing. Clean, similar to Unity default.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorStyle.Round">
            <summary>
            Round boxes.
            </summary>
        </member>
        <member name="F:AdvancedInspector.InspectorStyle.Flat">
            <summary>
            Unity flat style
            </summary>
        </member>
        <member name="T:AdvancedInspector.SeparatorStyle">
            <summary>
            The separator's styles
            </summary>
        </member>
        <member name="F:AdvancedInspector.SeparatorStyle.Empty">
            <summary>
            No separator visible
            </summary>
        </member>
        <member name="F:AdvancedInspector.SeparatorStyle.Gradient">
            <summary>
            The default gradient
            </summary>
        </member>
        <member name="F:AdvancedInspector.SeparatorStyle.Full">
            <summary>
            The full bar
            </summary>
        </member>
        <member name="T:AdvancedInspector.InspectorWrapper">
            <summary>
            A wrapper recongnized by the internal inspector so that non-UnityEngine.Object can be inspected.
            </summary>
        </member>
        <member name="P:AdvancedInspector.InspectorWrapper.Tag">
            <summary>
            Object to Inspector
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorWrapper.Select(System.Object)">
            <summary>
            Force Unity's "Selection" to use a non-unity object.
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorWrapper.IsSelected(System.Object)">
            <summary>
            Is this object selected by Unity's Selection?
            </summary>
        </member>
        <member name="M:AdvancedInspector.InspectorWrapper.GetSelection``1">
            <summary>
            Get currenty Unity's Selection 
            </summary>
        </member>
        <member name="T:AdvancedInspector.Clipboard">
            <summary>
            A copy/paste buffer.
            Does not use the System buffer, as it's limited to a string and Unity does not provide a uniformed string serialization.
            </summary>
        </member>
        <member name="P:AdvancedInspector.Clipboard.Data">
            <summary>
            In case of any normal object, returns deep copy of that object.
            In case of a Component, returns the original so you can apply it on a GameObject yourself (sorry)
            In case of a UnityEngine.Object, create a new one and perforce a Serialization Copy.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Clipboard.CreateInstance(System.Type,UnityEngine.Object)">
            <summary>
            Create an instance of type
            Works with values, list, array, scriptableObject, string
            Components are ignored.
            
            The owner MonoBeahviour is used in case of the creation of a ComponentMonoBehaviour for its internal binding.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Clipboard.Copy(System.Object,UnityEngine.Object)">
            <summary>
            Perform a deep copy if an object.
            Does not perform copies of Components or GameObject
            Values are returned as is (ex.: 14)
            strings are cloned.
            List/Array are enumerated and copied.
            Everything else is deep copied by fields.
            </summary>
        </member>
        <member name="P:AdvancedInspector.Clipboard.Type">
            <summary>
            Type of the current data in the clipboard.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Clipboard.TryConvertion(System.Type,System.Object@)">
            <summary>
            Test if the current clipboard data can be converted into a specific type.
            Ex.: int to string
            </summary>
        </member>
        <member name="M:AdvancedInspector.Clipboard.TryConvertion``1(``0@)">
            <summary>
            Test if the current clipboard data can be converted into a specific type.
            Ex.: int to string
            </summary>
        </member>
        <member name="M:AdvancedInspector.Clipboard.CanConvert(System.Type,System.Object)">
            <summary>
            Return true if an object is convertable to a type.
            </summary>
        </member>
        <member name="T:AdvancedInspector.IControl">
            <summary>
            Define a control that can be drawn in an EditorWindow.
            </summary>
        </member>
        <member name="M:AdvancedInspector.IControl.Draw(UnityEngine.Rect)">
            <summary>
            Draw the control. Return if the parent EditorWindow should repaint the window.
            </summary>
        </member>
        <member name="E:AdvancedInspector.IControl.RequestRepaint">
            <summary>
            In the event an internal process of the Control want a repaint of the window outside the Drawing scope.
            </summary>
        </member>
        <member name="T:AdvancedInspector.Separator">
            <summary>
            A separator holds two control side by side and divide them with a draggable line.
            It can be horizontal or vertical.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Separator.Draw(UnityEngine.Rect)">
            <summary>
            Draw the whole region holding the two control and the separator.
            The separator pass down the proper region to Draw of the sub-controls.
            Returns true if the window needs to be repainted.
            </summary>
        </member>
        <member name="P:AdvancedInspector.DragEventArgs.Target">
            <summary>
            Targeted object
            </summary>
        </member>
        <member name="P:AdvancedInspector.DragEventArgs.InBetween">
            <summary>
            Is on top of the target
            </summary>
        </member>
        <member name="P:AdvancedInspector.DragEventArgs.Dragged">
            <summary>
            Selecttion dragged
            </summary>
        </member>
        <member name="T:AdvancedInspector.EnumExtension">
            <summary>
            Extends Enum with some bitfields related method.
            </summary>
        </member>
        <member name="M:AdvancedInspector.EnumExtension.Append``1(System.Enum,``0)">
            <summary>
            Add a value to a bitfield.
            </summary>
        </member>
        <member name="M:AdvancedInspector.EnumExtension.Remove``1(System.Enum,``0)">
            <summary>
            Remove a value from a bitfield.
            </summary>
        </member>
        <member name="M:AdvancedInspector.EnumExtension.Has``1(System.Enum,``0)">
            <summary>
            Test if a bitfield has a value.
            </summary>
        </member>
        <member name="M:AdvancedInspector.EnumExtension.GetAttribute``1(System.Enum)">
            <summary>
            Gets an attribute on an enum field value
            </summary>
            <typeparam name="T">The type of the attribute you want to retrieve</typeparam>
            <param name="enumVal">The enum value</param>
            <returns>The attribute of type T that exists on the enum value</returns>
        </member>
        <member name="T:AdvancedInspector.TypeExtension">
            <summary>
            Extends Enum with some bitfields related method.
            </summary>
        </member>
        <member name="M:AdvancedInspector.TypeExtension.GetBaseGenericType(System.Type)">
            <summary>
            Returns the nearest parent class that is generic. 
            </summary>
        </member>
        <member name="T:AdvancedInspector.Helper">
            <summary>
            Collection of static helping method.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Helper.Load(System.String)">
            <summary>
            Load a binary file (ex.: from a .resx file) and covert it to a Unity Texture2D
            This one is generally used when a non-editor script requires a texture.
            It is requested by a the TextureRequest event.
            </summary>
            <param name="name">The name of the embedded resource.</param>
            <returns>A UnityEngine.Texture</returns>
        </member>
        <member name="M:AdvancedInspector.Helper.Load(System.Byte[])">
            <summary>
            Load a binary file (ex.: from a .resx file) and covert it to a Unity Texture2D
            </summary>
            <param name="binary">The binary resources.</param>
            <returns>A UnityEngine.Texture</returns>
        </member>
        <member name="P:AdvancedInspector.Helper.White">
            <summary>
            A fully white texture.
            Usually used by the DrawColor method.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Helper.DrawColor(UnityEngine.Rect,UnityEngine.Color)">
            <summary>
            Similar to GUI.DrawTexture, but draw a color instead.
            </summary>
            <param name="rect">Region to draw.</param>
            <param name="color">The color of the draw call.</param>
        </member>
        <member name="T:AdvancedInspector.DateTimeDialog">
            <summary>
            The DateTime dialog is a date picker that is day/week accurate.
            </summary>
        </member>
        <member name="F:AdvancedInspector.DateTimeDialog.HEIGHT">
            <summary>
            Height of dialog
            </summary>
        </member>
        <member name="F:AdvancedInspector.DateTimeDialog.WIDTH">
            <summary>
            Width of dialog
            </summary>
        </member>
        <member name="P:AdvancedInspector.DateTimeDialog.Time">
            <summary>
            Modified DateTime if Result is Ok
            </summary>
        </member>
        <member name="M:AdvancedInspector.DateTimeDialog.Create(AdvancedInspector.IModal,System.DateTime,UnityEngine.Vector2)">
            <summary>
            Create this dialog.
            </summary>
        </member>
        <member name="M:AdvancedInspector.DateTimeDialog.Draw(UnityEngine.Rect)">
            <summary>
            Draw the dialog region.
            </summary>
        </member>
        <member name="T:AdvancedInspector.IModal">
            <summary>
            This EditorWindow can recieve and send Toolbox inputs.
            </summary>
        </member>
        <member name="M:AdvancedInspector.IModal.ModalRequest(System.Boolean)">
            <summary>
            Called when the Toolbox shortcut is pressed.
            The implementation should call CreateToolbox if the condition are right.
            </summary>
        </member>
        <member name="M:AdvancedInspector.IModal.ModalClosed(AdvancedInspector.ModalWindow)">
            <summary>
            Called when the associated toolbox is closed.
            Only called when Ok/Cancel or Enter/Escape is pressed.
            There's no reliable way of trapping the "click outside the popup" event.
            </summary>
        </member>
        <member name="T:AdvancedInspector.ModalWindow">
            <summary>
            Define a popup window that return a result.
            Base class for IModal implementation.
            </summary>
        </member>
        <member name="F:AdvancedInspector.ModalWindow.TITLEBAR">
            <summary>
            Top title bar height
            </summary>
        </member>
        <member name="F:AdvancedInspector.ModalWindow.owner">
            <summary>
            The object that invoked this modal.
            </summary>
        </member>
        <member name="F:AdvancedInspector.ModalWindow.result">
            <summary>
            Internal modal result.
            </summary>
        </member>
        <member name="P:AdvancedInspector.ModalWindow.Result">
            <summary>
            Result of this modal window.
            </summary>
        </member>
        <member name="M:AdvancedInspector.ModalWindow.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:AdvancedInspector.ModalWindow.OnLostFocus">
            <summary>
            Invoked by Unity when the user click outside the window.
            </summary>
        </member>
        <member name="M:AdvancedInspector.ModalWindow.Cancel">
            <summary>
            Called when pressing Escape or Cancel.
            </summary>
        </member>
        <member name="M:AdvancedInspector.ModalWindow.Ok">
            <summary>
            Called when pressing Enter or Ok.
            </summary>
        </member>
        <member name="M:AdvancedInspector.ModalWindow.Exist``1">
            <summary>
            Does this specific modal type exist?
            </summary>
        </member>
        <member name="M:AdvancedInspector.ModalWindow.OnGUI">
            <summary>
            Usually you should not override this.
            </summary>
        </member>
        <member name="M:AdvancedInspector.ModalWindow.Draw(UnityEngine.Rect)">
            <summary>
            Implement your draw items here.
            </summary>
        </member>
        <member name="T:AdvancedInspector.Toolbox">
            <summary>
            The toolbox is a generic way of display a selection to the user.
            Any EditorWindow that implement IToolbox will call it when CTRL+Q is request it.
            It is up to the window to fill the content of the Toolbox.
            </summary>
        </member>
        <member name="P:AdvancedInspector.Toolbox.Items">
            <summary>
            List of items visible by this toolbox.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Toolbox.AddItem(System.Object,System.String,System.String,UnityEngine.Texture)">
            <summary>
            Add an item to the toolbox list.
            </summary>
        </member>
        <member name="P:AdvancedInspector.Toolbox.Selection">
            <summary>
            The current selection.
            </summary>
        </member>
        <member name="P:AdvancedInspector.Toolbox.Search">
            <summary>
            The search term entered in the search field.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Toolbox.Create(AdvancedInspector.IModal,System.String,System.Collections.Generic.List{AdvancedInspector.DescriptionPair},UnityEngine.Vector2)">
            <summary>
            Create a toolbox for this IModal.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Toolbox.Create(AdvancedInspector.IModal,System.String,System.Collections.Generic.List{AdvancedInspector.DescriptionPair},UnityEngine.Vector2,System.String)">
            <summary>
            Create a toolbox for this IModal.
            </summary>
        </member>
        <member name="M:AdvancedInspector.Toolbox.Draw(UnityEngine.Rect)">
            <summary>
            IControl implementation
            </summary>
        </member>
        <member name="T:AdvancedInspector.WindowResult">
            <summary>
            Result returned by a Modal Window
            </summary>
        </member>
        <member name="F:AdvancedInspector.WindowResult.None">
            <summary>
            No result, no action taken
            </summary>
        </member>
        <member name="F:AdvancedInspector.WindowResult.Ok">
            <summary>
            Ok or Enter
            </summary>
        </member>
        <member name="F:AdvancedInspector.WindowResult.Cancel">
            <summary>
            Cancel or Escape
            </summary>
        </member>
        <member name="F:AdvancedInspector.WindowResult.Invalid">
            <summary>
            An error occured
            </summary>
        </member>
        <member name="F:AdvancedInspector.WindowResult.LostFocus">
            <summary>
            User clicked outside the modal
            </summary>
        </member>
        <member name="T:AdvancedInspector.EditorResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Add">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.AlphaOrder">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.AntiAlphaOrder">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Box_Empty">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.BoxFlat">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.BoxFlat_Pro">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.BoxFlat_Title">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.BoxFlat_TitlePro">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.BoxRound">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.BoxRound_Pro">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.BoxRound_Title">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.BoxRound_TitlePro">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Calendar">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Capsule">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Check">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Checkbox_Back_Idle">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Checkbox_Back_Pressed">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Checkbox_Check">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.CheckpointHead">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.CheckpointLine">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.CheckpointPersistant">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ClipBackground">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Connected">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Cross">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Cube">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Cylinder">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Delete">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Directory">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Disconnected">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Drag">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Drag_Light">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Edit">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.EditorBackground">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ExtendBot">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ExtendBotPro">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ExtendTop">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ExtendTopPro">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Favorited">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.File">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.FolderClosed">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.FolderOpen">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Hidden">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Hierarchy">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Hourglass">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Jump">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Knob">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.KnobBack">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Length">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Locked">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Logo">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.MoveDown">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.MoveEmpty">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.MoveUp">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.NoOrder">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.NotFavorited">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Package">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Picker">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.PickerCursor">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.PickerPro">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.PreviewLight1">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.PreviewLight2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.PreviewLight3">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Refresh">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Save">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.SaveProject">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.SaveScene">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Scene">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ScrollDown">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ScrollLeft">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ScrollLeft_Light">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ScrollRight">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ScrollRight_Light">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.ScrollUp">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.SeparatorHorizontal">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.SeparatorVertical">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.SeparatorVertical_Empty">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.SeparatorVertical_Full">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Sphere">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Unlocked">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.Visible">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:AdvancedInspector.EditorResources.White">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:AdvancedInspector.TreeView">
            <summary>
            A control that is a list of item that can be nested.
            Support drag and drop, editing and sorting.
            </summary>
        </member>
        <member name="P:AdvancedInspector.TreeView.Selection">
            <summary>
            Current selected tags.
            </summary>
        </member>
        <member name="P:AdvancedInspector.TreeView.Count">
            <summary>
            Number of visible nodes.
            </summary>
        </member>
        <member name="M:AdvancedInspector.TreeView.BuildVisibility">
            <summary>
            Refresh the list of visible item when the items list has changed.
            </summary>
        </member>
        <member name="M:AdvancedInspector.TreeView.BuildVisibility(System.Collections.Generic.List{AdvancedInspector.TreeViewItem},System.Collections.Generic.List{AdvancedInspector.TreeViewItem})">
            <summary>
            Refresh the list of visible item when the items list has changed.
            </summary>
        </member>
    </members>
</doc>
